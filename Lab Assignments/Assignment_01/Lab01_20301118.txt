Name: Shouvik Banerjee Argha
ID:20301118
Section:10
Lab Assignment:01
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem01
def shiftLeft(source,k):
  temp=k
  i=0
  while temp<len(source):
    source[i]=source[temp]
    temp+=1
    i+=1
  i=0
  while i<k:
    source[len(source)-1-i]=0
    i+=1

source=[10,20,30,40,50,60]
shiftLeft(source,3)
print(source)
#TheideawastakenfromBuX
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem02
source = [10,20,30,40,50,60]
k = 3

def printSource(source):
  a = [0] * len(source)
  for i in range(0,len(source)):
    a[i]= source[i]
  print(a)
    
def rotateLeft(source, k):
    for i in range(0, k):
        temp = source[0]
        for j in range(0, len(source)-1):
            source[j] = source[j+1]
        source[len(source)-1] = temp
    return source
    
print("source Before rotateLeft: ")
printSource(source)
rotatedsource = rotateLeft(source, k)
print("\nsource after rotateLeft: ")
printSource(rotatedsource)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem03
def remove(source,size,idx):
  rdr=idx
  while rdr<size-1:
    source[rdr]= source[rdr+1]
    rdr+=1
  source[size-1]=0


 


source=[10,20,30,40,50,0,0]
remove(source,5,2)
print(source)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem04
def removeAll(source,size,element):
  j=0
  for i in range(len(source)):
    if source[i]!= element:
      source[j]= source[i]
      j+=1
      source[size-1]=0
  return source
source=[10,2,30,2,50,2,2,0,0]
removeAll(source,7,2)
print(source)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem05
def beam_balance(A):
  i=0
  j=len(A)-1
  sum_1=0
  sum_2=0
  sum_3=0
  sum_4=0
  for i in range (0,len(A) // 2):
      sum_1 += A[i]

  for j in range(len(A) // 2,len(A)):
      sum_2 += A[j]

  for k in range (0,(len(A) // 2)+1):
      sum_3 += A[k]

  for l in range ((len(A) // 2) + 1,len(A)):
      sum_4 += A[l]

  if sum_1 == sum_2:
      print(True)
  elif sum_3 == sum_4:
    print(True)
  else: 
    print(False)



A=[2,1,1,2,1]
beam_balance(A)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem06
def arrayseries(a):
    list=[]
    result=0
    for i in range(a,0,-1):
        for j in range(a,0,-1):
            k=a-i+1
            if j<=k:
                result=j
                list.append(result)
            else:
                result=0
                list.append(result)

    print(list)
arrayseries(4)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem07
def max_bunch_count(A):
  rdr=0 
  x=1
  j=len(A)-1
  for i in range(0,j):
    if A[i]==A[i+1]:
      x+=1
    else:
      x=1 
    
    if x>rdr:
      rdr = x
  print(rdr)

A=[1,2,2,3,4,4,4]
max_bunch_count(A)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Problem08
def array(A):
  x=[0]
  y=len(A) * x
  r= 100
  for i in range(0,len(A)):
    count = 1
    for j in range((i+1),len(A)):
      if A[i]==A[j]:
        count+=1
        y[j]=r
    if y[i]!=r:
      y[i]=count
  for i in range(0,len(y)):
    for j in range(i+1,len(y)):
      if y[i]==y[j]:
        return True
      else:
        return False
  print(A)

A=[3,4,6,3,4,7,4,6,8,6,6]
array(A)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Circular Array 1
def palindrome(a,start,size):
  k=[0] * size
  r=None
  for i in range(0,size):
      k[i]= a[start]
      start=(start+1) % len(a)

  y=size//2
  for j in range(0,y):
    if k[j]==k[y+1]:
      r=True
      break
    else:
      r=False
    

  return r



circularArray= [20,10,0,0,0,10,20,30]

palindrome(circularArray,5,5)
print(palindrome(circularArray,5,5))

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#Circular Array_2
def intersection(x,y,start_x,start_y,size_x,size_y):
  index_x=start_x
  index_y=start_y
  z=[]
  for i in range(0,len(x)):
    for j in range(0,len(y)):
      if x[index_x]==y[index_y] and x[index_x]!=0:
        z.append(x[index_x])
        break
      index_y=(index_y+1)%len(y)
      
        
    index_x=(index_x+1)%len(x)
    index_y=start_y
  return z

x= [40,50,0,0,0,10,20,30]
y= [10,20,5,0,0,0,0,0,5,40,15,25]
print(intersection(x,y,5,8,5,7))

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Circular Array_3
#Circular_Array_3
def musicalchair(s, x):
    n = (len(s) //(2))
    i = n
    while i<len(s)-1:
        if x==3:
            s[i]=s[i+1]
        i += 1
    print(s[len(s)-1])
s=["Otis","Maeve","Ruby","Eric","Jackson","Adam","Aimee"]
(musicalchair(s,4))